'''
Análise de Algoritmos
CIANM2C-CIA022-20212 - IESB SUL
Professor Rodrigo Hagstrom
27 de setembro

PROVA 1
Em duas liguagens de programação diferente (A e B – C e Python, por exemplo) três códigos de ordenação à sua escolha. Provar com Cálculo nos comentários à exemplo dos vídeos do MyCodeSchool se no pior caso há melhoria, ou não. Mostrar também o desempenho obtido no compilador de sua escolha.

Desenvolvido por Thiago Silva (1922120026)
'''
# Importandos as libs usadas
import time

lista = [9,7,4,3,12,8,54,13,25,31,26]
print('Lista original - desordenada')
print(lista)

tempo_inicio = time.time_ns()

def sort(array):
    sort_half(array, 0, len(array) - 1)


def sort_half(array, start, end):
    if start >= end:
        return

    middle = (start + end) // 2

    sort_half(array, start, middle)
    sort_half(array, middle + 1, end)

    merge(array, start, end)


def merge(array, start, end):
    array[start: end + 1] = sorted(array[start: end + 1])

tempo_fim = time.time_ns()

tempo = tempo_fim - tempo_inicio
    
sort(lista)
print('\nLista ordenada pelo método MergeSort Sort')
print(lista)
print('Gerada em ' + str(tempo) + 'ns\n')
print('Pior caso: O(n^2)')
print('Caso médio: O(n^2)')
print('Melhor caso: O(n)')
